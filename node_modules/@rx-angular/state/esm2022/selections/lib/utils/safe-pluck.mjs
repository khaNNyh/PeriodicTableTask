import { isDefined, isKeyOf, isObjectGuard } from './guards';
export function safePluck(stateObject, keys) {
    // needed to match null and undefined conventions of RxAngular core components
    // safePluck(null) -> return null
    // safePluck(undefined) -> return undefined
    // safePluck(obj, ['wrongKey']) -> return undefined
    // safePluck(obj, ['correctKey']) -> return value of key
    // safePluck(obj, '') -> return undefined
    // safePluck(obj, null) -> return undefined
    if (!isDefined(stateObject)) {
        return stateObject;
    }
    if (!isDefined(keys)) {
        return undefined;
    }
    // sanitize keys -> keep only valid keys (string, number, symbol)
    const keysArr = (Array.isArray(keys) ? keys : [keys]).filter(k => isKeyOf(k));
    if (keysArr.length === 0 ||
        !isObjectGuard(stateObject) ||
        Object.keys(stateObject).length === 0) {
        return undefined;
    }
    let prop = stateObject[keysArr.shift()];
    keysArr.forEach(key => {
        if (isObjectGuard(prop) && isKeyOf(key)) {
            prop = prop[key];
        }
    });
    return prop;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FmZS1wbHVjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvc3RhdGUvc2VsZWN0aW9ucy9zcmMvbGliL3V0aWxzL3NhZmUtcGx1Y2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBOEM3RCxNQUFNLFVBQVUsU0FBUyxDQU92QixXQUFjLEVBQ2QsSUFNNEI7SUFVNUIsOEVBQThFO0lBQzlFLGlDQUFpQztJQUNqQywyQ0FBMkM7SUFDM0MsbURBQW1EO0lBQ25ELHdEQUF3RDtJQUN4RCx5Q0FBeUM7SUFDekMsMkNBQTJDO0lBQzNDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztRQUM1QixPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3JCLE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFDRCxpRUFBaUU7SUFDakUsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDL0QsT0FBTyxDQUFJLENBQUMsQ0FBQyxDQUNkLENBQUM7SUFDRixJQUNFLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUNwQixDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUNyQyxDQUFDO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNELElBQUksSUFBSSxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFRLENBQUMsQ0FBQztJQUU5QyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3BCLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3hDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsQ0FBQztJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNEZWZpbmVkLCBpc0tleU9mLCBpc09iamVjdEd1YXJkIH0gZnJvbSAnLi9ndWFyZHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2FmZVBsdWNrPFQgZXh0ZW5kcyBvYmplY3QsIEsxIGV4dGVuZHMga2V5b2YgVD4oXG4gIHN0YXRlT2JqZWN0OiBULFxuICBrZXlzOiBLMSB8IFtLMV1cbik6IFRbSzFdO1xuXG5leHBvcnQgZnVuY3Rpb24gc2FmZVBsdWNrPFQgZXh0ZW5kcyBvYmplY3QsXG4gIEsxIGV4dGVuZHMga2V5b2YgVCxcbiAgSzIgZXh0ZW5kcyBrZXlvZiBUW0sxXT4oc3RhdGVPYmplY3Q6IFQsIGtleXM6IFtLMSwgSzJdKTogVFtLMV1bSzJdO1xuXG5leHBvcnQgZnVuY3Rpb24gc2FmZVBsdWNrPFQgZXh0ZW5kcyBvYmplY3QsXG4gIEsxIGV4dGVuZHMga2V5b2YgVCxcbiAgSzIgZXh0ZW5kcyBrZXlvZiBUW0sxXSxcbiAgSzMgZXh0ZW5kcyBrZXlvZiBUW0sxXVtLMl0+KHN0YXRlT2JqZWN0OiBULCBrZXlzOiBbSzEsIEsyLCBLM10pOiBUW0sxXVtLMl1bSzNdO1xuXG5leHBvcnQgZnVuY3Rpb24gc2FmZVBsdWNrPFQgZXh0ZW5kcyBvYmplY3QsXG4gIEsxIGV4dGVuZHMga2V5b2YgVCxcbiAgSzIgZXh0ZW5kcyBrZXlvZiBUW0sxXSxcbiAgSzMgZXh0ZW5kcyBrZXlvZiBUW0sxXVtLMl0sXG4gIEs0IGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdW0szXT4oc3RhdGVPYmplY3Q6IFQsIGtleXM6IFtLMSwgSzIsIEszLCBLNF0pOiBUW0sxXVtLMl1bSzNdW0s0XTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNhZmVQbHVjazxUIGV4dGVuZHMgb2JqZWN0LFxuICBLMSBleHRlbmRzIGtleW9mIFQsXG4gIEsyIGV4dGVuZHMga2V5b2YgVFtLMV0sXG4gIEszIGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdLFxuICBLNCBleHRlbmRzIGtleW9mIFRbSzFdW0syXVtLM10sXG4gIEs1IGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdW0szXVtLNF0+KHN0YXRlT2JqZWN0OiBULCBrZXlzOiBbSzEsIEsyLCBLMywgSzQsIEs1XSk6IFRbSzFdW0syXVtLM11bSzRdW0s1XTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNhZmVQbHVjazxUIGV4dGVuZHMgb2JqZWN0LFxuICBLMSBleHRlbmRzIGtleW9mIFQsXG4gIEsyIGV4dGVuZHMga2V5b2YgVFtLMV0sXG4gIEszIGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdLFxuICBLNCBleHRlbmRzIGtleW9mIFRbSzFdW0syXVtLM10sXG4gIEs1IGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdW0szXVtLNF0sXG4gIEs2IGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdW0szXVtLNF1bSzVdPihcbiAgc3RhdGVPYmplY3Q6IFQsXG4gIGtleXM6XG4gICAgfCBbSzFdXG4gICAgfCBbSzEsIEsyXVxuICAgIHwgW0sxLCBLMiwgSzNdXG4gICAgfCBbSzEsIEsyLCBLMywgSzRdXG4gICAgfCBbSzEsIEsyLCBLMywgSzQsIEs1XVxuICAgIHwgW0sxLCBLMiwgSzMsIEs0LCBLNSwgSzZdXG4pOiBUW0sxXVtLMl1bSzNdW0s0XVtLNV1bSzZdO1xuXG5leHBvcnQgZnVuY3Rpb24gc2FmZVBsdWNrPFQgZXh0ZW5kcyBvYmplY3QsXG4gIEsxIGV4dGVuZHMga2V5b2YgVCxcbiAgSzIgZXh0ZW5kcyBrZXlvZiBUW0sxXSxcbiAgSzMgZXh0ZW5kcyBrZXlvZiBUW0sxXVtLMl0sXG4gIEs0IGV4dGVuZHMga2V5b2YgVFtLMV1bSzJdW0szXSxcbiAgSzUgZXh0ZW5kcyBrZXlvZiBUW0sxXVtLMl1bSzNdW0s0XSxcbiAgSzYgZXh0ZW5kcyBrZXlvZiBUW0sxXVtLMl1bSzNdW0s0XVtLNV0+KFxuICBzdGF0ZU9iamVjdDogVCxcbiAga2V5czpcbiAgICB8IFtLMV1cbiAgICB8IFtLMSwgSzJdXG4gICAgfCBbSzEsIEsyLCBLM11cbiAgICB8IFtLMSwgSzIsIEszLCBLNF1cbiAgICB8IFtLMSwgSzIsIEszLCBLNCwgSzVdXG4gICAgfCBbSzEsIEsyLCBLMywgSzQsIEs1LCBLNl1cbik6XG4gIHwgVFtLMV1cbiAgfCBUW0sxXVtLMl1cbiAgfCBUW0sxXVtLMl1bSzNdXG4gIHwgVFtLMV1bSzJdW0szXVtLNF1cbiAgfCBUW0sxXVtLMl1bSzNdW0s0XVtLNV1cbiAgfCBUW0sxXVtLMl1bSzNdW0s0XVtLNV1bSzZdXG4gIHwgbnVsbFxuICB8IHVuZGVmaW5lZCB7XG4gIC8vIG5lZWRlZCB0byBtYXRjaCBudWxsIGFuZCB1bmRlZmluZWQgY29udmVudGlvbnMgb2YgUnhBbmd1bGFyIGNvcmUgY29tcG9uZW50c1xuICAvLyBzYWZlUGx1Y2sobnVsbCkgLT4gcmV0dXJuIG51bGxcbiAgLy8gc2FmZVBsdWNrKHVuZGVmaW5lZCkgLT4gcmV0dXJuIHVuZGVmaW5lZFxuICAvLyBzYWZlUGx1Y2sob2JqLCBbJ3dyb25nS2V5J10pIC0+IHJldHVybiB1bmRlZmluZWRcbiAgLy8gc2FmZVBsdWNrKG9iaiwgWydjb3JyZWN0S2V5J10pIC0+IHJldHVybiB2YWx1ZSBvZiBrZXlcbiAgLy8gc2FmZVBsdWNrKG9iaiwgJycpIC0+IHJldHVybiB1bmRlZmluZWRcbiAgLy8gc2FmZVBsdWNrKG9iaiwgbnVsbCkgLT4gcmV0dXJuIHVuZGVmaW5lZFxuICBpZiAoIWlzRGVmaW5lZChzdGF0ZU9iamVjdCkpIHtcbiAgICByZXR1cm4gc3RhdGVPYmplY3Q7XG4gIH1cbiAgaWYgKCFpc0RlZmluZWQoa2V5cykpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIC8vIHNhbml0aXplIGtleXMgLT4ga2VlcCBvbmx5IHZhbGlkIGtleXMgKHN0cmluZywgbnVtYmVyLCBzeW1ib2wpXG4gIGNvbnN0IGtleXNBcnIgPSAoQXJyYXkuaXNBcnJheShrZXlzKSA/IGtleXMgOiBba2V5c10pLmZpbHRlcihrID0+XG4gICAgaXNLZXlPZjxUPihrKVxuICApO1xuICBpZiAoXG4gICAga2V5c0Fyci5sZW5ndGggPT09IDAgfHxcbiAgICAhaXNPYmplY3RHdWFyZChzdGF0ZU9iamVjdCkgfHxcbiAgICBPYmplY3Qua2V5cyhzdGF0ZU9iamVjdCkubGVuZ3RoID09PSAwXG4gICkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgbGV0IHByb3AgPSBzdGF0ZU9iamVjdFtrZXlzQXJyLnNoaWZ0KCkgYXMgSzFdO1xuXG4gIGtleXNBcnIuZm9yRWFjaChrZXkgPT4ge1xuICAgIGlmIChpc09iamVjdEd1YXJkKHByb3ApICYmIGlzS2V5T2Yoa2V5KSkge1xuICAgICAgcHJvcCA9IHByb3Bba2V5XTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcHJvcDtcbn1cbiJdfQ==